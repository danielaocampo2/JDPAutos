{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/admin-employee/admin-employee.component.ts","./src/app/components/admin-employee/admin-employee.component.html","./src/app/components/cambiar-password/cambiar-password.component.ts","./src/app/components/cambiar-password/cambiar-password.component.html","./src/app/components/employee-update/employee-update.component.ts","./src/app/components/employee-update/employee-update.component.html","./src/app/components/info-dialog/info-dialog.component.ts","./src/app/components/info-dialog/info-dialog.component.html","./src/app/components/owner-refresh-token/owner-refresh-token.component.ts","./src/app/components/owner-refresh-token/owner-refresh-token.component.html","./src/app/components/owner-register/owner-register.component.ts","./src/app/components/owner-register/owner-register.component.html","./src/app/components/owner-reparations/owner-reparations.component.ts","./src/app/components/owner-reparations/owner-reparations.component.html","./src/app/components/owner-signin/owner-signin.component.ts","./src/app/components/owner-signin/owner-signin.component.html","./src/app/components/private-tasks/private-tasks.component.ts","./src/app/components/private-tasks/private-tasks.component.html","./src/app/components/register-vehicle/register-vehicle.component.ts","./src/app/components/register-vehicle/register-vehicle.component.html","./src/app/components/repair/repair.component.ts","./src/app/components/repair/repair.component.html","./src/app/components/signin/signin.component.ts","./src/app/components/signin/signin.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/components/tasks/tasks.component.ts","./src/app/components/tasks/tasks.component.html","./src/app/components/upload-file/upload-file.component.ts","./src/app/components/upload-file/upload-file.component.html","./src/app/components/vehicle/vehicle.component.ts","./src/app/components/vehicle/vehicle.component.html","./src/app/guards/admin.guard.ts","./src/app/guards/auth.guard.ts","./src/app/guards/empleado.guard.ts","./src/app/guards/supervisor.guard.ts","./src/app/services/auth.service.ts","./src/app/services/empleado.service.ts","./src/app/services/owner.service.ts","./src/app/services/repair.service.ts","./src/app/services/tasks.service.ts","./src/app/services/token-interceptor.service.ts","./src/app/services/vehicle.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\n// Components\r\nimport { TasksComponent } from './components/tasks/tasks.component';\r\nimport { PrivateTasksComponent } from './components/private-tasks/private-tasks.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { SigninComponent } from './components/signin/signin.component';\r\nimport { OwnerRegisterComponent } from './components/owner-register/owner-register.component';\r\nimport { OwnerSigninComponent } from \"./components/owner-signin/owner-signin.component\";\r\nimport {RegisterVehicleComponent} from './components/register-vehicle/register-vehicle.component';\r\nimport {EmployeeUpdateComponent} from './components/employee-update/employee-update.component';\r\nimport {OwnerRefreshTokenComponent} from './components/owner-refresh-token/owner-refresh-token.component';\r\nimport {RepairComponent} from \"./components/repair/repair.component\";\r\nimport { VehicleComponent } from \"./components/vehicle/vehicle.component\";\r\n\r\nimport { AuthGuard } from './guards/auth.guard'; // pongalo en las rutas que quiera proteger\r\nimport { SupervisorGuard } from './guards/supervisor.guard'; // pongalo en las rutas que quiera proteger\r\nimport { AdminGuard } from './guards/admin.guard'; // pongalo en las rutas que quiera proteger\r\nimport { EmpleadoGuard } from './guards/empleado.guard'; // pongalo en las rutas que quiera proteger\r\nimport { CambiarPasswordComponent } from './components/cambiar-password/cambiar-password.component';\r\nimport { AdminEmployeeComponent } from './components/admin-employee/admin-employee.component';\r\nimport {OwnerReparationsComponent} from './components/owner-reparations/owner-reparations.component'\r\n\r\nconst routes: Routes = [\r\n  //Ruta inicial\r\n  {\r\n    path:'',\r\n    redirectTo:'/team',\r\n    pathMatch:'full'\r\n  },\r\n  {\r\n    path:'team',\r\n    component:TasksComponent\r\n  },\r\n  { // necesita autenticación\r\n    path:'private',\r\n    component:PrivateTasksComponent,\r\n    canActivate:[AuthGuard, EmpleadoGuard]\r\n  },\r\n  {\r\n    path:'signup',\r\n    component:SignupComponent,\r\n    canActivate: [AuthGuard,AdminGuard] \r\n  },\r\n  {\r\n    path:'signin',\r\n    component:SigninComponent\r\n  },\r\n  {\r\n    path:'owner-register',\r\n    component:OwnerRegisterComponent,\r\n    canActivate: [AuthGuard,SupervisorGuard]\r\n  },\r\n  {\r\n    path:'owner-signin',\r\n    component:OwnerSigninComponent\r\n  },\r\n  { \r\n    path:'change-password',\r\n    component: CambiarPasswordComponent\r\n  },\r\n \r\n  { // necesita autenticación para registrar vehiculo\r\n    path:'register-vehicle',\r\n    component:RegisterVehicleComponent,\r\n    canActivate:[AuthGuard, SupervisorGuard]\r\n  },\r\n  { // necesita autenticación para registrar vehiculo\r\n    path:'employee-update',\r\n    component:EmployeeUpdateComponent,\r\n    canActivate:[AuthGuard, EmpleadoGuard]\r\n  },\r\n  { // necesita autenticación para registrar vehiculo\r\n    path:'refresh-token',\r\n    component:OwnerRefreshTokenComponent,\r\n    canActivate: [AuthGuard,SupervisorGuard]\r\n  },\r\n  {\r\n    path:'create-repair',\r\n    component:RepairComponent,\r\n    canActivate: [AuthGuard, SupervisorGuard]\r\n  },\r\n  {\r\n    path:'edit-employ',\r\n    component:AdminEmployeeComponent,\r\n    canActivate: [AuthGuard, AdminGuard]\r\n  },\r\n  {\r\n    path:'vehicle',\r\n    component: VehicleComponent,\r\n    canActivate: [AuthGuard, SupervisorGuard]\r\n  },\r\n  {\r\n    path:'owner-reparations',\r\n    component:OwnerReparationsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from './services/auth.service';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent {\r\n  constructor(public authService: AuthService){}\r\n\r\n\r\n\r\n\r\n   public mirol(){\r\n    let mirol = localStorage.getItem('mirol');\r\n    return mirol;\r\n   }\r\n\r\n   public myId(){\r\n     let usuario = localStorage.getItem('myId')\r\n     return usuario;\r\n   }\r\n   public myname(){\r\n    let nombre = localStorage.getItem('name')\r\n    return nombre;\r\n  }\r\n\r\n}\r\n","<nav class=\" navbar navbar-expand-lg navbar-light\" style=\"background-color: #e3f2fd;\">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\" routerLink=\"/\"><img class=\"milogo\"src=\"./assets/images/logo2.png\" alt=\"logo\"></a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav \">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"/team\" routerLinkActive=\"active\">Team</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"/private\" routerLinkActive=\"active\">Campo privado</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"/private\" routerLinkActive=\"active\">Private</a>\r\n                </li>\r\n            </ul>\r\n            <ul class=\"navbar-nav ml-auto\">\r\n                <ng-container *ngIf=\"!authService.loggedIn(); else loggedIn\">\r\n\r\n                </ng-container>\r\n            \r\n                <ng-template #loggedIn>\r\n                    \r\n                    <li class=\"nav-item\" *ngIf=\"mirol()\">\r\n                        <a class=\"nav-link\" routerLink=\"/employee-update\" routerLinkActive=\"active\">Actualizar datos</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"mirol() == 'Supervisor de taller'\">\r\n                        <a class=\"nav-link\" routerLink=\"/refresh-token\" routerLinkActive=\"active\">Refrescar token</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"mirol() == 'Supervisor de taller'\">\r\n                        <a class=\"nav-link\" routerLink=\"/register-vehicle\" routerLinkActive=\"active\">Registrar Vehiculo</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"mirol() == 'Supervisor de taller'\">\r\n                        <a class=\"nav-link\" routerLink=\"/owner-register\" routerLinkActive=\"active\">Registrar Propietario</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"mirol() == 'Supervisor de taller'\">\r\n                        <a class=\"nav-link\" routerLink=\"/create-repair\" routerLinkActive=\"active\">Reparaciones</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"mirol() == 'Supervisor de taller'\">\r\n                        <a class=\"nav-link\" routerLink=\"/vehicle\" routerLinkActive=\"active\">Buscar vehiculo</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"mirol() == 'admin'\">\r\n                        <a class=\"nav-link\" routerLink=\"/edit-employ\" routerLinkActive=\"active\">Editar empleados</a>\r\n                    </li>\r\n                    <li class=\"nav-item\" *ngIf=\"mirol() == 'admin'\">\r\n                        <a class=\"nav-link\" routerLink=\"/signup\" routerLinkActive=\"active\">Registrar Empleado</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" style=\"cursor: pointer;\" (click)=\"authService.logout()\">Logout</a>\r\n                    </li>\r\n                </ng-template>\r\n\r\n            </ul>\r\n            \r\n        </div>\r\n    </div>\r\n</nav>\r\n<mat-grid-list cols=\"4\" rowHeight=\"100px\" *ngIf=\"authService.loggedIn()\"> \r\n    <mat-grid-tile\r\n        \r\n        [colspan]=\"3\"\r\n        [rowspan]=\"1\"\r\n        [style.background]=\"\">\r\n      \r\n    </mat-grid-tile>\r\n    <mat-grid-tile\r\n        \r\n        [colspan]=\"1\"\r\n        [rowspan]=\"1\"\r\n        [style.background]=\"\">\r\n        <div class=\"alert alert-info\" role=\"alert\">\r\n            {{mirol()}}!\r\n          </div>\r\n        \r\n      \r\n    </mat-grid-tile>\r\n    \r\n</mat-grid-list>\r\n\r\n\r\n<br>\r\n<mat-grid-list cols=\"4\" rowHeight=\"80px\" *ngIf=\"!authService.loggedIn()\"> \r\n    <mat-grid-tile\r\n        \r\n        [colspan]=\"1\"\r\n        [rowspan]=\"1\"\r\n        [style.background]=\"\">\r\n      \r\n    </mat-grid-tile>\r\n    <mat-grid-tile\r\n        \r\n        [colspan]=\"1\"\r\n        [rowspan]=\"1\"\r\n        [style.background]=\"'#666'\">\r\n        <a class=\"nav-link\" routerLink=\"/signin\"  [style.color]=\"'white'\" routerLinkActive=\"active\">AREA DE EMPLEADOS !</a>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile\r\n        \r\n        [colspan]=\"1\"\r\n        [rowspan]=\"1\"\r\n        \r\n        [style.background]=\"'#9D61FF'\">\r\n        <a class=\"nav-link\" routerLink=\"/owner-signin\" [style.color]=\"'white'\" routerLinkActive=\"active\">AREA DE CLIENTES !</a>\r\n       \r\n    </mat-grid-tile>\r\n    \r\n    <mat-grid-tile\r\n        \r\n        [colspan]=\"1\"\r\n        [rowspan]=\"1\"\r\n        [style.background]=\"\">\r\n      \r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n<div class=\"container p-5\">\r\n    <router-outlet>\r\n    </router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { SigninComponent } from './components/signin/signin.component';\r\nimport { TasksComponent } from './components/tasks/tasks.component';\r\nimport { PrivateTasksComponent } from './components/private-tasks/private-tasks.component';\r\n\r\nimport { AuthGuard } from './guards/auth.guard'; // agreguelo en providers\r\nimport { TokenInterceptorService } from './services/token-interceptor.service';\r\nimport { OwnerRegisterComponent } from './components/owner-register/owner-register.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { OwnerSigninComponent } from './components/owner-signin/owner-signin.component';\r\nimport { InfoDialogComponent } from './components/info-dialog/info-dialog.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { RegisterVehicleComponent } from './components/register-vehicle/register-vehicle.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport { EmployeeUpdateComponent } from './components/employee-update/employee-update.component';\r\n\r\nimport { UploadFileComponent } from './components/upload-file/upload-file.component';\r\n\r\nimport {ImageUploadModule} from 'angular2-image-upload';\r\n\r\nimport { OwnerRefreshTokenComponent } from './components/owner-refresh-token/owner-refresh-token.component';\r\nimport { CambiarPasswordComponent } from './components/cambiar-password/cambiar-password.component';\r\nimport { VehicleComponent } from './components/vehicle/vehicle.component';\r\nimport { RepairComponent } from './components/repair/repair.component';\r\nimport { AdminEmployeeComponent } from './components/admin-employee/admin-employee.component';\r\nimport { OwnerReparationsComponent } from './components/owner-reparations/owner-reparations.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignupComponent,\r\n    SigninComponent,\r\n    TasksComponent,\r\n    PrivateTasksComponent,\r\n    OwnerRegisterComponent,\r\n    OwnerSigninComponent,\r\n    InfoDialogComponent,\r\n    RegisterVehicleComponent,\r\n    EmployeeUpdateComponent,\r\n    UploadFileComponent,\r\n    OwnerRefreshTokenComponent,\r\n    CambiarPasswordComponent,\r\n    VehicleComponent,\r\n    RepairComponent,\r\n    AdminEmployeeComponent,\r\n    OwnerReparationsComponent\r\n\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatGridListModule,\r\n    MatPaginatorModule,\r\n    MatCardModule,\r\n    ImageUploadModule.forRoot()\r\n    \r\n\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    { // Petiones van a tener una cabecera extra\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\r\nimport { EmpleadoService } from 'src/app/services/empleado.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-employee',\r\n  templateUrl: './admin-employee.component.html',\r\n  styleUrls: ['./admin-employee.component.css'],\r\n})\r\nexport class AdminEmployeeComponent implements OnInit {\r\n  text = '';\r\n\r\n  validatorGroup = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\r\n    ]),\r\n    number: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^[0-9]{1,11}$/),\r\n    ]),\r\n    name: new FormControl('', [Validators.required]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(5),\r\n    ]),\r\n    role: new FormControl('', [Validators.required]),\r\n    phone: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\r\n    ]),\r\n  });\r\n\r\n  empleados = []\r\n  empleadosMostrar = []\r\n  datos = {\r\n    phone: \"\",\r\n    email: \"\",\r\n    name: \"\"\r\n  }\r\n\r\n  constructor(\r\n    private empleadoService: EmpleadoService,\r\n    private router: Router,\r\n    private readonly dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.empleadoService.getAll()\r\n      // la respuesta que me da el servidor\r\n      .subscribe(\r\n        res => {\r\n          this.empleados = []\r\n          this.empleadosMostrar = []\r\n          // guarde token en el local storage\r\n          this.empleados = res.users;\r\n          this.empleadosMostrar.push(this.empleados[0])\r\n        },\r\n        err => {\r\n          this.text = err.error.message;\r\n          this.empleados = []\r\n          this.empleadosMostrar = []\r\n          this.openDialog(1)\r\n        }//err\r\n      )\r\n  }\r\n\r\n  onPageChange($event) {\r\n    this.empleadosMostrar = this.empleados.slice($event.pageIndex * $event.pageSize, $event.pageIndex * $event.pageSize + $event.pageSize);\r\n  }\r\n  get primEmail() {\r\n    return this.validatorGroup.get('email');\r\n  }\r\n\r\n  get justNumber() {\r\n    return this.validatorGroup.get('number');\r\n  }\r\n\r\n  get placa() {\r\n    return this.validatorGroup.get('placa');\r\n  }\r\n\r\n  get name() {\r\n    return this.validatorGroup.get('name');\r\n  }\r\n\r\n\r\n  get role() {\r\n    return this.validatorGroup.get('role');\r\n  }\r\n\r\n  get phone() {\r\n    return this.validatorGroup.get('phone');\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n  }\r\n  actualizarEmpleado(id, name, phone, email, state) {\r\n    this.datos.email = email\r\n    this.datos.phone = phone\r\n    this.datos.name = name\r\n    if(state == \"Desactivado\"){\r\n    this.empleadoService.desactivar(id)\r\n      // la respuesta que me da el servidor\r\n      .subscribe(\r\n        res => {\r\n        },\r\n        err => { }\r\n      )\r\n    }\r\n    if(state == \"Activado\"){\r\n      this.empleadoService.activar(id)\r\n      // la respuesta que me da el servidor\r\n      .subscribe(\r\n        res => {\r\n        },\r\n        err => { }\r\n      )\r\n    }\r\n    this.empleadoService.update(this.datos, id)\r\n      // la respuesta que me da el servidor\r\n      .subscribe(\r\n        res => {\r\n          // guarde token en el local storage\r\n          this.text = res.message;\r\n          this.openDialog(0)\r\n        },\r\n        err => {\r\n          this.text = err.error.message;\r\n          this.openDialog(1)\r\n        }//err\r\n      )\r\n\r\n  }\r\n  openDialog(error) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.minWidth = '350px';\r\n    dialogConfig.maxWidth = '600px';\r\n\r\n    dialogConfig.data = {\r\n      title: error == 1 ? \":(\" : \":)\",\r\n      msg: this.text,\r\n    };\r\n\r\n\r\n    this.dialog\r\n      .open(InfoDialogComponent, dialogConfig)\r\n      .afterClosed()\r\n      .subscribe(\r\n        (success) => { },\r\n        (e) => {\r\n          console.error(e);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-4 mx-auto\">\r\n        <div class=\"card\">\r\n            <mat-paginator (page)=\"onPageChange($event)\" [length]=\"empleados.length\" [pageSize]=\"1\"\r\n                [pageSizeOptions]=\"[1]\">\r\n            </mat-paginator>\r\n            <div class=\"card-body\" *ngFor=\"let empleado of empleadosMostrar\">  \r\n                <b>Nombre: </b> <input class=\"form-control\" #name \r\n                    value=\"{{empleado.name}}\">\r\n                <p></p>\r\n                <b>telefono: </b> <input class=\"form-control\" #phone \r\n                    value=\"{{empleado.phone}}\">\r\n                <p></p>\r\n                <b>email: </b> <input class=\"form-control\" #email \r\n                value=\"{{empleado.email}}\">\r\n                <p></p>\r\n                <b>Estado: </b>\r\n                <select name=\"type\" class=\"form-control\" #estado>\r\n                    <option>{{empleado.status==0?\"Desactivado\":\"Activado\"}}</option>\r\n                    <option>{{empleado.status==0?\"Activado\":\"Desactivado\"}}</option>\r\n                </select>\r\n                <p></p>\r\n                <button type=\"submit\" color=\"elegant\" class=\"btn btn-primary\" style=\"background-color:#008cba\"\r\n                    (click)=\"actualizarEmpleado(empleado.id_user,name.value,phone.value,email.value,estado.value)\">\r\n                    Actualizar Datos\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { EmpleadoService } from 'src/app/services/empleado.service';\r\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-cambiar-password',\r\n  templateUrl: './cambiar-password.component.html',\r\n  styleUrls: ['./cambiar-password.component.css']\r\n})\r\nexport class CambiarPasswordComponent implements OnInit {\r\n  user = {\r\n    email: ''\r\n  };\r\n  error = false;\r\n  errorPass = false\r\n  data = {\r\n    password: \"\",\r\n    token: \"\"\r\n  }\r\n  pass2 = \"\"\r\n  habBoton = true\r\n  constructor(private empleadoService: EmpleadoService, private router: Router, private readonly dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  getForm() {\r\n    if (localStorage.getItem('hjkas') == 'pñl') { return true }\r\n    else { return false }\r\n  }\r\n  cambiarForm() {\r\n    localStorage.removeItem('hjkas');\r\n  }\r\n\r\n  verificarPass() {\r\n    if (this.pass2 != \"\") {\r\n      if (this.data.password == this.pass2) {\r\n        this.errorPass = false;\r\n      }\r\n      else {\r\n        this.errorPass = true\r\n      }\r\n      if (this.data.token != \"\" && this.errorPass == false) {\r\n        this.habBoton = false\r\n      }\r\n      else {\r\n        this.habBoton = true\r\n      }\r\n    } else {\r\n      this.errorPass = false;\r\n      this.habBoton = true;\r\n    }\r\n\r\n  }\r\n  cambiarPass() {\r\n    this.empleadoService.cambiarContraseña(this.data, localStorage.getItem('plsas').toString()).subscribe(\r\n      (res) => {\r\n        if (res.message == 'Contraseña Actualizada') {\r\n          this.openDialog(res.message);\r\n          this.error = true;\r\n          localStorage.removeItem('hjkas');\r\n          localStorage.removeItem('plsas');\r\n          this.router.navigate(['/signin']);\r\n        }\r\n        else {\r\n          this.error = true;\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err)\r\n        this.error = true\r\n        this.openDialog(err.error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  enviarCorreo() {\r\n\r\n    this.empleadoService.correoRecuperarContraseña(this.user).subscribe(\r\n      (res) => {\r\n        if (res.message == 'Correo enviado con exito') {\r\n          this.openDialog(res.message);\r\n          this.error = true;\r\n          localStorage.setItem('hjkas', 'pñl');\r\n          this.empleadoService.getEmpleado2(this.user.email).subscribe(\r\n            (res) => {\r\n              localStorage.setItem('plsas',res.users[0].id_user);\r\n            },\r\n            (err) => {\r\n              console.log(err)\r\n            });\r\n              \r\n        }\r\n        else {\r\n          this.error = true;\r\n        }\r\n      },\r\n      (err) => {\r\n        this.error = true\r\n        this.openDialog(err.error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  openDialog(errors) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.minWidth = '350px';\r\n    dialogConfig.maxWidth = '600px';\r\n    let carita = errors == 'Correo enviado con exito' ? \":)\" : \":(\";\r\n    if(errors == \"Contraseña Actualizada\"){\r\n      carita = \":)\"\r\n    }\r\n    dialogConfig.data = {\r\n      title: carita,\r\n      msg: errors\r\n    };\r\n\r\n    this.dialog.open(InfoDialogComponent, dialogConfig).afterClosed().subscribe((success) => {\r\n    },\r\n      (e) => {\r\n        /* console.error(e); */\r\n      });\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"getForm(); else elseTemplate\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 mx-auto\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    Cambiar contraseña\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <form (submit)=\"cambiarPass()\">\r\n                        <!-- <div class=\"form-group\">\r\n                            <label for=\"email\">Email:</label>\r\n                            <input type=\"text\" [(ngModel)]=\"owner.email\" name=\"email\" class=\"form-control\" placeholder=\"Ingresa el correo\" required autofocus>\r\n                        </div> -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"Email\">Ingresa el token:</label>\r\n                            <input type=\"text\" [(ngModel)]=\"data.token\" name=\"email\" class=\"form-control\"\r\n                            (keyup)=\"verificarPass()\" placeholder=\"Ingresa el token\" required>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"Email\">Ingresa la contraseña:</label>\r\n                            <input type=\"password\" [(ngModel)]=\"data.password\" name=\"email\" class=\"form-control\"\r\n                            (keyup)=\"verificarPass()\" placeholder=\"Ingresa la contraseña\" required>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"Email\">Confirmar contraseña:</label>\r\n                            <input type=\"password\" [(ngModel)]=\"pass2\" name=\"email\" class=\"form-control\"\r\n                               (keyup)=\"verificarPass()\" placeholder=\"Ingresa la contraseña de nuevo\" required>\r\n                        </div>\r\n                        <b style=\"color: red;\" *ngIf=\"errorPass\" >Las contraseñas no coinciden</b>\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-block\" [disabled]=\"habBoton\">\r\n                            Cambiar contraseña\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 mx-auto\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <button type=\"submit\" class=\"btn btn-primary btn-block\" (click)=\"cambiarForm()\">\r\n                        Enviar de nuevo el correo con el token\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-container>\r\n<ng-template #elseTemplate>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 mx-auto\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    Ingresa correo para recibir el token\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <form (submit)=\"enviarCorreo()\">\r\n                        <!-- <div class=\"form-group\">\r\n                            <label for=\"email\">Email:</label>\r\n                            <input type=\"text\" [(ngModel)]=\"owner.email\" name=\"email\" class=\"form-control\" placeholder=\"Ingresa el correo\" required autofocus>\r\n                        </div> -->\r\n                        <div class=\"form-group\">\r\n                            <label for=\"Email\">Correo:</label>\r\n                            <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\"\r\n                                placeholder=\"Ingresa el correo\" required>\r\n                        </div>\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-block\">\r\n                            Enviar correo\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\r\nimport { EmpleadoService } from '../../services/empleado.service';\r\nimport {UploadFileComponent} from '../upload-file/upload-file.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-employee-update',\r\n  templateUrl: './employee-update.component.html',\r\n  styleUrls: ['./employee-update.component.css']\r\n})\r\nexport class EmployeeUpdateComponent implements OnInit {\r\n  text = \"Ese correo ya está asociado a otro empleado\";\r\n\r\n  userID=localStorage.getItem('myId');\r\n\r\n  validatorGroup = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\r\n    ]),\r\n    name: new FormControl('', [\r\n      Validators.required\r\n    ]),\r\n    phone: new FormControl('',[\r\n      Validators.required,\r\n      Validators.pattern(/^-?(0|[1-9]\\d*)?$/)\r\n    ])\r\n  });\r\n\r\n  user = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    imgUrl:'',\r\n    role:''\r\n  };\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private empleadoService:EmpleadoService,\r\n    private router:Router,\r\n    private readonly dialog: MatDialog) { }\r\n    \r\n  ngOnInit(): void {\r\n\r\n    this.empleadoService.getEmpleado(this.userID)\r\n      .subscribe(\r\n        res=>{\r\n          this.user.name=res['users'][0]['name'];\r\n          this.user.email=res['users'][0]['email'];\r\n          this.user.phone=res['users'][0]['phone'];\r\n          this.user.imgUrl=res['users'][0]['imgUrl'];\r\n          this.user.role=res['users'][0]['role'];\r\n        },\r\n        err=>console.log(\"error al recibir empleado\",this.userID) //err\r\n      )\r\n  }\r\n\r\n  get primEmail() {\r\n    return this.validatorGroup.get('email');\r\n  }\r\n\r\n  get name() {\r\n    return this.validatorGroup.get('name');\r\n  }\r\n\r\n  get phone(){\r\n    return this.validatorGroup.get('phone')\r\n  }\r\n\r\n  onSubmit() {\r\n    this.empleadoService.update(this.user, this.userID)\r\n    // la respuesta que me da el servidor\r\n      .subscribe(\r\n        res =>{\r\n          // guarde token en el local storage\r\n          localStorage.setItem('token', res.token);\r\n          this.router.navigate(['/private']);\r\n          \r\n        },\r\n        err => this.openDialog() //err\r\n        \r\n    )\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.minWidth = '350px';\r\n    dialogConfig.maxWidth = '600px';\r\n\r\n    dialogConfig.data = {\r\n      msg: this.text,\r\n    };\r\n\r\n    this.dialog.open(InfoDialogComponent, dialogConfig).afterClosed().subscribe((success) => {\r\n  },\r\n  (e) => {\r\n      console.error(e);\r\n  });\r\n  }\r\n}\r\n","\r\n<mat-grid-list cols=\"4\" rowHeight=\"500px\"> \r\n    \r\n    <mat-grid-tile\r\n        \r\n        [colspan]=\"2\"\r\n        [rowspan]=\"1\"\r\n        [style.background]=\"'#666'\">\r\n        <mat-card class=\"example-card\">\r\n            <mat-card-header>\r\n              <div mat-card-avatar class=\"example-header-image\"></div>\r\n              <mat-card-title>Actualizar mis Datos</mat-card-title>\r\n              <mat-card-subtitle>Modifica tus datos aquí</mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <mat-card-content>\r\n                <form (submit)=\"onSubmit()\" [formGroup]=\"validatorGroup\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Nombre:</label>\r\n                        <input disabled=\"true\" [class.is-invalid]=\"validatorGroup.get('name').invalid && validatorGroup.get('name').touched\" type=\"text\" [(ngModel)]=\"user.name\" name=\"name\" class=\"form-control\" placeholder=\"Nombre\" formControlName=\"name\" autofocus>\r\n                        <div *ngIf=\"(name.invalid && name.touched) || name.dirty\">\r\n                            <small *ngIf=\"name.errors?.required\" class=\"text-danger\">El nombre es requerido</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">Correo:</label>\r\n                        <input [class.is-invalid]=\"validatorGroup.get('email').invalid && validatorGroup.get('email').touched\" type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\" placeholder=\"Correo\" formControlName=\"email\" >\r\n                        <div *ngIf=\"(primEmail.invalid && primEmail.touched) || primEmail.dirty\">\r\n                            <small *ngIf=\"primEmail.errors?.required\" class=\"text-danger\">El Correo es requerido</small>\r\n                            \r\n                            <small *ngIf=\"primEmail.errors?.pattern\" class=\"text-danger\">Por favor ingresa un Correo correcto</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"phone\">Telefono:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('phone').invalid && validatorGroup.get('phone').touched\" type=\"text\" [(ngModel)]=\"user.phone\"  class=\"form-control\" placeholder=\"Telefono\" formControlName=\"phone\">\r\n                        <div *ngIf=\"(phone.invalid && phone.touched) || phone.dirty\">\r\n                            <small *ngIf=\"phone.errors?.required\" class=\"text-danger\">El telefono es requerido</small>\r\n                            \r\n                            <small *ngIf=\"phone.errors?.pattern\" class=\"text-danger\">Por favor, ingresa un telefono correcto</small>\r\n                          </div>\r\n                    </div>\r\n                    <button type=\"submit\" [disabled]=\"validatorGroup.invalid\" mat-raised-button color=\"primary\">\r\n                        Actualizar\r\n                    </button>\r\n                </form>\r\n                \r\n              </mat-card-content>\r\n        </mat-card>\r\n        \r\n    </mat-grid-tile>\r\n    <mat-grid-tile\r\n        \r\n        [colspan]=\"1\"\r\n        [rowspan]=\"1\"\r\n        [style.background]=\"\">\r\n        \r\n        <app-upload-file></app-upload-file> \r\n    </mat-grid-tile>\r\n    <mat-grid-tile\r\n        \r\n        [colspan]=\"1\"\r\n        [rowspan]=\"1\"\r\n        [style.background]=\"''\">\r\n        <mat-card class=\"example-card\">\r\n            <mat-card-header>\r\n              <div mat-card-avatar class=\"example-header-image\"></div>\r\n              <mat-card-title>{{user.name}}</mat-card-title>\r\n              <mat-card-subtitle>{{user.role}}</mat-card-subtitle>\r\n            </mat-card-header>\r\n            <img class=\"imgRedonda\" mat-card-image src=\"{{user.imgUrl}}\" alt=\"Foto de perfil\">\r\n            <mat-card-content>\r\n              <p>\r\n               Mi Correo:{{user.email}}\r\n              </p>\r\n              <p>Mi Telefono:{{user.phone}}</p>  \r\n              \r\n            </mat-card-content>\r\n           \r\n          </mat-card>\r\n        \r\n       \r\n    </mat-grid-tile>\r\n    \r\n  </mat-grid-list>\r\n\r\n  \r\n  ","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-info-dialog',\r\n  templateUrl: './info-dialog.component.html',\r\n  styleUrls: ['./info-dialog.component.css'],\r\n})\r\nexport class InfoDialogComponent {\r\n  data = null;\r\n  constructor(\r\n    private readonly dialogRef: MatDialogRef<InfoDialogComponent>,\r\n\r\n    @Inject(MAT_DIALOG_DATA) data\r\n\r\n  ) {\r\n    this.data = data;\r\n  }\r\n   \r\n\r\n confirm() {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  cancel() {}\r\n}\r\n","<h2 mat-dialog-title class=\"font-weight-bold\">\r\n    {{data.title}}\r\n</h2>\r\n\r\n<mat-dialog-content class=\"row\">\r\n\r\n    <h1 [innerHTML]=\"data.msg\">{{data.msg}}\r\n    </h1>\r\n\r\n    <button (click)=\"confirm()\">Cerrar</button>\r\n \r\n </mat-dialog-content>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\r\nimport { OwnerService } from '../../services/owner.service';\r\n\r\n@Component({\r\n  selector: 'app-owner-refresh-token',\r\n  templateUrl: './owner-refresh-token.component.html',\r\n  styleUrls: ['./owner-refresh-token.component.css']\r\n})\r\nexport class OwnerRefreshTokenComponent implements OnInit {\r\n  owner = {\r\n    email: ''\r\n  };\r\n  error = false;\r\n  constructor(private ownerService: OwnerService, private router: Router, private readonly dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  refreshToken() {\r\n\r\n    this.ownerService.refreshToken(this.owner).subscribe(\r\n      (res) => {\r\n        if (res.message == 'Fecha de caducidad del token actualizada') {\r\n          this.openDialog(res.message);\r\n          this.error = true;\r\n        }\r\n        else {\r\n          this.error = true;\r\n        }\r\n      },\r\n      (err) => {\r\n        this.error = true\r\n        this.openDialog(err.error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  openDialog(errors) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.minWidth = '350px';\r\n    dialogConfig.maxWidth = '600px';\r\n    let carita = errors == 'Fecha de caducidad del token actualizada'? \":)\": \":(\";\r\n\r\n    dialogConfig.data = {\r\n      title: carita,\r\n      msg: errors\r\n    };\r\n\r\n    this.dialog.open(InfoDialogComponent, dialogConfig).afterClosed().subscribe((success) => {\r\n    },\r\n      (e) => {\r\n        /* console.error(e); */\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-4 mx-auto\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Refrescar token\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form (submit)=\"refreshToken()\">\r\n                    <!-- <div class=\"form-group\">\r\n                        <label for=\"email\">Email:</label>\r\n                        <input type=\"text\" [(ngModel)]=\"owner.email\" name=\"email\" class=\"form-control\" placeholder=\"Ingresa el correo\" required autofocus>\r\n                    </div> -->\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Email\">Correo:</label>\r\n                        <input type=\"text\" [(ngModel)]=\"owner.email\" name=\"email\" class=\"form-control\" placeholder=\"Ingresa el correo\" required>\r\n                    </div>\r\n                    <button  type=\"submit\" class=\"btn btn-primary btn-block\">\r\n                      Refrescar token\r\n                  </button>\r\n                  \r\n                    \r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { OwnerService } from '../../services/owner.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-owner-register',\r\n  templateUrl: './owner-register.component.html',\r\n  styleUrls: ['./owner-register.component.css'],\r\n})\r\nexport class OwnerRegisterComponent implements OnInit {\r\n  title = 'email-validation';\r\n  validatorGroup = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\r\n    ]),\r\n    number: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\r\n    ]),\r\n    numberCC: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^[0-9]{1,11}$/),\r\n    ]),\r\n    name: new FormControl('', [\r\n      Validators.required\r\n    ])\r\n  });\r\n\r\n  owner = {\r\n    id_owner:'',\r\n    name: '',\r\n    email: '',\r\n    phone: ''\r\n  };\r\n\r\n  constructor(private ownerService: OwnerService, private router: Router, private readonly dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  get primEmail() {\r\n    return this.validatorGroup.get('email');\r\n  }\r\n\r\n  get justNumber() {\r\n    return this.validatorGroup.get('number');\r\n  }\r\n\r\n  get placa() {\r\n    return this.validatorGroup.get('placa');\r\n  }\r\n\r\n  get justNumberCC() {\r\n    return this.validatorGroup.get('numberCC');\r\n  }\r\n\r\n  get name() {\r\n    return this.validatorGroup.get('name');\r\n  }\r\n\r\n  get role() {\r\n    return this.validatorGroup.get('role');\r\n  }\r\n\r\n  submit() {\r\n    this.ownerService\r\n      .signUp(this.owner)\r\n      // la respuesta que me da el servidor\r\n      .subscribe(\r\n        (res) => {\r\n            localStorage.setItem('token', res.token);\r\n            this.router.navigate(['/private']);\r\n          // guarde token en el local storage\r\n        },\r\n        (err) => {\r\n             if(err[\"error\"][\"message\"] == \"El usuario ya existe\"){\r\n                this.openDialog();               \r\n             } \r\n            else{\r\n            console.log(err);\r\n          }\r\n         \r\n        }\r\n      );\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.minWidth = '350px';\r\n    dialogConfig.maxWidth = '600px';\r\n    dialogConfig.data = {\r\n      title: \":(\",\r\n      msg: \"El usuario ya existe\",\r\n    };\r\n\r\n    this.dialog.open(InfoDialogComponent, dialogConfig).afterClosed().subscribe((success) => {\r\n  },\r\n  (e) => {\r\n      console.error(e);\r\n  });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-4 mx-auto\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Registro de propietarios\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form (submit)=\"submit()\"  [formGroup]=\"validatorGroup\">\r\n                  <!--<div class=\"form-group\">\r\n                        <label for=\"vehicle\">Placa Vehiculo:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('number').invalid && validatorGroup.get('number').touched\" type=\"text\" [(ngModel)]=\"owner.vehicle\"  name=\"vehicle\" class=\"form-control\" placeholder=\"vehicle\" formControlName=\"placa\">\r\n                        <div *ngIf=\"(placa.invalid && placa.touched) || placa.dirty\">\r\n                            <small *ngIf=\"placa.errors?.required\" class=\"text-danger\">Es necesario que ingreses una placa</small>\r\n                            <small *ngIf=\"placa.errors?.pattern\" class=\"text-danger\">Ingresa por favor una placa válida</small>\r\n                          </div>\r\n                    </div> -->\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Nombres:</label>\r\n                        <input [class.is-invalid]=\"validatorGroup.get('name').invalid && validatorGroup.get('name').touched\" type=\"text\" [(ngModel)]=\"owner.name\" name=\"name\" class=\"form-control\" placeholder=\"nombres\" formControlName=\"name\" autofocus>\r\n                        <div *ngIf=\"(name.invalid && name.touched) || name.dirty\">\r\n                            <small *ngIf=\"name.errors?.required\" class=\"text-danger\">El nombre es requerido</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                   <!---- <div class=\"form-group\">\r\n                        <label for=\"surname\"> Apellidos:</label>\r\n                        <input type=\"text\" [(ngModel)]=\"owner.surname\" [ngModelOptions]=\"{standalone: true}\" name=\"surname\" class=\"form-control\" placeholder=\"Apellidos\" required autofocus>\r\n                    </div> -->\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cc\">CC:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('numberCC').invalid && validatorGroup.get('numberCC').touched\" type=\"text\" [(ngModel)]=\"owner.id_owner\" name=\"id_owner\" class=\"form-control\" placeholder=\"Cédula\" formControlName=\"numberCC\">\r\n                        <div *ngIf=\"(justNumberCC.invalid && justNumberCC.touched) || justNumberCC.dirty\">\r\n                            <small *ngIf=\"justNumberCC.errors?.required\" class=\"text-danger\">La cédula es requerida</small>\r\n                            <!--question mark(?) is a safe navigation operator-->\r\n                            <small *ngIf=\"justNumberCC.errors?.pattern\" class=\"text-danger\">Por favor, ingresa una cédula correcta</small>\r\n                          </div>\r\n                    </div>\r\n                   \r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">Correo:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('email').invalid && validatorGroup.get('email').touched\" type=\"email\" [(ngModel)]=\"owner.email\" name=\"email\" class=\"form-control\" placeholder=\"Correo\" formControlName=\"email\">\r\n                        <div *ngIf=\"(primEmail.invalid && primEmail.touched) || primEmail.dirty\">\r\n                            <small *ngIf=\"primEmail.errors?.required\" class=\"text-danger\">El correo es requerido</small>\r\n                            <!--question mark(?) is a safe navigation operator-->\r\n                            <small *ngIf=\"primEmail.errors?.pattern\" class=\"text-danger\">Por favor ingresa un correo correcto</small>\r\n                          </div>\r\n                    </div>\r\n                  \r\n                    <div class=\"form-group\">\r\n                        <label for=\"phone\">Telefono:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('number').invalid && validatorGroup.get('number').touched\" type=\"text\" [(ngModel)]=\"owner.phone\"  class=\"form-control\" placeholder=\"Telefono\" formControlName=\"number\">\r\n                        <div *ngIf=\"(justNumber.invalid && justNumber.touched) || justNumber.dirty\">\r\n                            <small *ngIf=\"justNumber.errors?.required\" class=\"text-danger\">El telefono es requerido</small>\r\n                            <!--question mark(?) is a safe navigation operator-->\r\n                            <small *ngIf=\"justNumber.errors?.pattern\" class=\"text-danger\">Por favor, ingresa un telefono correcto</small>\r\n                          </div>\r\n                    </div>\r\n        \r\n                    <button mat-stroked-button color=\"primary\" type=\"submit\" [disabled]=\"validatorGroup.invalid\" class=\"btn btn-primary btn-block\">\r\n                        SignUp\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-owner-reparations',\r\n  templateUrl: './owner-reparations.component.html',\r\n  styleUrls: ['./owner-reparations.component.css']\r\n})\r\nexport class OwnerReparationsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  reparaciones =  JSON.parse(localStorage.getItem('reparaciones'));\r\n  ngOnInit(): void {\r\n    console.log(this.reparaciones)\r\n  }\r\n\r\n}\r\n","<ng-template [ngIf]=\"reparaciones.length > 0\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\" *ngFor=\"let reparacion of reparaciones\">\r\n            <b>Placa: </b>\r\n            {{reparacion.placa}}\r\n            <p></p><b>Estado: </b>\r\n            {{reparacion.estado}}\r\n            <p></p><b>Precio: </b> {{reparacion.precio}}\r\n            <p></p>\r\n            <b>Detalles: </b> {{reparacion.detalles}}\r\n            <p></p>\r\n        </div>\r\n        <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\" [(pageSize)]=\"pagesize\" [rotate]=\"true\">\r\n        </ngb-pagination>\r\n    </div>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\n// importar el servicio\r\nimport { OwnerService } from '../../services/owner.service';\r\n// para navegar\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-owner-signin',\r\n  templateUrl: './owner-signin.component.html',\r\n  styleUrls: ['./owner-signin.component.css'],\r\n})\r\nexport class OwnerSigninComponent implements OnInit {\r\n  text = \"El token ha caducado\"\r\n  owner = {\r\n    token: ''\r\n  };\r\n  error = false;\r\n  constructor(private ownerService: OwnerService, private router: Router, private readonly dialog: MatDialog) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  signIn() {\r\n    this.ownerService.signIn(this.owner).subscribe(\r\n      (res) => {\r\n        if (res.message == 'accedido') {\r\n          this.error = false;\r\n          console.log(res)\r\n          localStorage.setItem('id_owner', res.id);\r\n          let reparacionx = res.reparacionGlobal[0];\r\n          for (let index = 1; index < res.reparacionGlobal.length; index++) {\r\n            for (let j = 0; j < res.reparacionGlobal[index].length; j++) {\r\n              reparacionx.push(res.reparacionGlobal[index][j])\r\n              \r\n            }\r\n            \r\n          }\r\n          localStorage.setItem('reparaciones', JSON.stringify(reparacionx));\r\n          this.router.navigate(['/owner-reparations']);\r\n        } else if(res.message == this.text){\r\n          this.openDialog(\"\");\r\n        }\r\n        else {\r\n          this.error = true;\r\n        }\r\n      },\r\n      (err) => {this.error = true\r\n           this.openDialog(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  openDialog(errors) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.minWidth = '350px';\r\n    dialogConfig.maxWidth = '600px';\r\n    dialogConfig.data = {\r\n\r\n      msg: errors.error.message,\r\n    };\r\n\r\n    this.dialog.open(InfoDialogComponent, dialogConfig).afterClosed().subscribe((success) => {\r\n  },\r\n  (e) => {\r\n      console.error(e);\r\n\r\n  });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-4 mx-auto\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Iniciar sesión\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form (submit)=\"signIn()\">\r\n                    <!-- <div class=\"form-group\">\r\n                        <label for=\"email\">Email:</label>\r\n                        <input type=\"text\" [(ngModel)]=\"owner.email\" name=\"email\" class=\"form-control\" placeholder=\"Ingresa el correo\" required autofocus>\r\n                    </div> -->\r\n                    <div class=\"form-group\">\r\n                        <label for=\"token\">Token:</label>\r\n                        <input type=\"text\" [(ngModel)]=\"owner.token\" name=\"token\" class=\"form-control\" placeholder=\"Ingresa el Token\" required>\r\n                    </div>\r\n                    <button  type=\"submit\" class=\"btn btn-primary btn-block\">\r\n                      Iniciar sesión\r\n                  </button>\r\n                  \r\n                    <label *ngIf=\"error\" style=\"color:red; text-align: center;\"> Ingrese un token</label>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TasksService } from '../../services/tasks.service';\r\n\r\n@Component({\r\n  selector: 'app-private-tasks',\r\n  templateUrl: './private-tasks.component.html',\r\n  styleUrls: ['./private-tasks.component.css']\r\n})\r\nexport class PrivateTasksComponent implements OnInit {\r\n\r\n  tasks=[];\r\n  constructor(private tasksService: TasksService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.tasksService.getPrivateTasks()\r\n      .subscribe(\r\n        res=>{\r\n          this.tasks=res.users;\r\n        },\r\n        err=>console.log(\"error\") //err\r\n      )\r\n\r\n  }\r\n\r\n}\r\n","<h1>Private</h1>\r\n<ul class=\"list-group\">\r\n    <li class=\"list-group-item\" *ngFor=\"let task of tasks\">\r\n        {{task.name}} - {{task.email}}: {{task.role}}\r\n    </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { VehicleService } from 'src/app/services/vehicle.service';\r\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-register-vehicle',\r\n  templateUrl: './register-vehicle.component.html',\r\n  styleUrls: ['./register-vehicle.component.css']\r\n})\r\nexport class RegisterVehicleComponent implements OnInit {\r\n  \r\n  validatorGroup = new FormGroup({\r\n    \r\n    id_owner: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^[0-9]{1,11}$/),\r\n    ]),\r\n    placa: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^([A-Z]{3}[0-9]{3})?$/),\r\n    ]),\r\n    marca: new FormControl('', [\r\n      Validators.required\r\n    ]),\r\n    modelo: new FormControl('', [\r\n      Validators.required\r\n    ]),\r\n    color: new FormControl('', [\r\n      Validators.required\r\n    ]),\r\n    dateIn: new FormControl('', [\r\n      Validators.required\r\n    ])\r\n\r\n  });\r\n  \r\n  text = \"\";\r\n  vehicle = {\r\n    placa: '',\r\n    id_owner: '',\r\n    marca: '',\r\n    model: '',\r\n    color:\"\",\r\n    dateIn: ''\r\n\r\n  };\r\n  constructor(private vehicleService: VehicleService,\r\n    private router:Router,\r\n    private readonly dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get marca() {\r\n    return this.validatorGroup.get('marca');\r\n  }\r\n\r\n  get justId() {\r\n    return this.validatorGroup.get('id_owner');\r\n  }\r\n\r\n  get placa() {\r\n    return this.validatorGroup.get('placa');\r\n  }\r\n\r\n  get color() {\r\n    return this.validatorGroup.get('color');\r\n  }\r\n\r\n  get modelo() {\r\n    return this.validatorGroup.get('modelo');\r\n  }\r\n\r\n  get dateIn() {\r\n    return this.validatorGroup.get('dateIn');\r\n  }\r\n\r\n\r\n  registerVehicle() {\r\n    this.vehicleService.crearVehiculo(this.vehicle)\r\n    // la respuesta que me da el servidor\r\n      .subscribe(\r\n        res =>{\r\n          this.text = res.message; \r\n             this.openDialog(0)\r\n        },\r\n        err => {\r\n          this.text = err.error.message; \r\n          this.openDialog(1) }//err\r\n    )\r\n    console.log(this.vehicle);\r\n    \r\n    \r\n  }\r\n\r\n  openDialog(error) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.minWidth = '350px';\r\n    dialogConfig.maxWidth = '600px';\r\n\r\n    dialogConfig.data = {\r\n      title: error== 1?\":(\":\":)\",\r\n      msg: this.text,\r\n    };\r\n\r\n    this.dialog.open(InfoDialogComponent, dialogConfig).afterClosed().subscribe((success) => {\r\n  },\r\n  (e) => {\r\n      console.error(e);\r\n  });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-4 mx-auto\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Registro de vehiculos\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form (submit)=\"registerVehicle()\" [formGroup]=\"validatorGroup\">\r\n                    \r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"placa\">Placa Vehiculo:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('placa').invalid && validatorGroup.get('placa').touched\" type=\"text\" [(ngModel)]=\"vehicle.placa\"  name=\"placa\" class=\"form-control\" placeholder=\"placa\" formControlName=\"placa\">\r\n                        <div *ngIf=\"(placa.invalid && placa.touched) || placa.dirty\">\r\n                            <small *ngIf=\"placa.errors?.required\" class=\"text-danger\">Es necesario que ingreses una placa</small>\r\n                            <small *ngIf=\"placa.errors?.pattern\" class=\"text-danger\">Ingresa por favor una placa válida</small>\r\n                          </div>\r\n                    </div> \r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"id_owner\">owner Id:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('id_owner').invalid && validatorGroup.get('id_owner').touched\" type=\"text\"  [(ngModel)]=\"vehicle.id_owner\" name=\"id_owner\" class=\"form-control\" placeholder=\"Cédula Propietario\" formControlName=\"id_owner\">\r\n                        <div *ngIf=\"(justId.invalid && justId.touched) || justId.dirty\">\r\n                            <small *ngIf=\"justId.errors?.required\" class=\"text-danger\">La cédula es requerida</small>\r\n                            <!--question mark(?) is a safe navigation operator-->\r\n                            <small *ngIf=\"justId.errors?.pattern\" class=\"text-danger\">Por favor, ingresa una cédula correcta</small>\r\n                          </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"marca\">Marca:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('marca').invalid && validatorGroup.get('marca').touched\" type=\"text\" [(ngModel)]=\"vehicle.marca\" name=\"marca\" class=\"form-control\" placeholder=\"Marca\"   formControlName=\"marca\" autofocus>\r\n                        <div *ngIf=\"(marca.invalid && marca.touched) || marca.dirty\">\r\n                            <small *ngIf=\"marca.errors?.required\" class=\"text-danger\">La marca del vahiculo es requerida</small>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"modelo\">Modelo:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('modelo').invalid && validatorGroup.get('modelo').touched\" type=\"text\" [(ngModel)]=\"vehicle.model\" name=\"modelo\" class=\"form-control\" placeholder=\"Modelo\"   formControlName=\"modelo\" autofocus>\r\n                        <div *ngIf=\"(modelo.invalid && modelo.touched) || modelo.dirty\">\r\n                            <small *ngIf=\"modelo.errors?.required\" class=\"text-danger\">El modelo del vahiculo es requerido</small>\r\n                          </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"color\">Color:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('color').invalid && validatorGroup.get('color').touched\" type=\"text\" [(ngModel)]=\"vehicle.color\" name=\"color\" class=\"form-control\" placeholder=\"color\"   formControlName=\"color\" autofocus>\r\n                        <div *ngIf=\"(color.invalid && color.touched) || color.dirty\">\r\n                            <small *ngIf=\"color.errors?.required\" class=\"text-danger\">La marca del vahiculo es requerida</small>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"dateIn\">Fecha de ingreso:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('dateIn').invalid && validatorGroup.get('dateIn').touched\"  type=\"datetime-local\" [(ngModel)]=\"vehicle.dateIn\" name=\"dateIn\" class=\"form-control\" placeholder=\"Fecha de Ingreso\" formControlName=\"dateIn\" autofocus>\r\n                        <div *ngIf=\"(dateIn.invalid && dateIn.touched) || dateIn.dirty\">\r\n                            <small *ngIf=\"dateIn.errors?.required\" class=\"text-danger\">Debe ingresar la fecha de ingreso del vehiculo</small>\r\n                          </div>\r\n                    </div>\r\n                    \r\n                    <button type=\"submit\" [disabled]=\"validatorGroup.invalid\" class=\"btn btn-primary btn-block\">\r\n                        Registrar\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RepairService } from '../../services/repair.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-repair',\r\n  templateUrl: './repair.component.html',\r\n  styleUrls: ['./repair.component.css']\r\n})\r\nexport class RepairComponent implements OnInit {\r\n\r\n  text = \"\";\r\n\r\n  validatorGroup = new FormGroup({\r\n    number: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^[0-9]{1,11}$/),\r\n    ]),\r\n    name: new FormControl('', [\r\n      Validators.required\r\n    ])\r\n  });\r\n\r\n  validadorPlaca = new FormGroup({\r\n    placaCampo: new FormControl('', [\r\n      Validators.required,\r\n    ])\r\n  });\r\n  placaEditar = ''\r\n\r\n  datos = {\r\n    estado: \"\",\r\n    detalles: \"\",\r\n    precio: \"\"\r\n  }\r\n  reparacion = {\r\n    placa: '',\r\n    precio: '',\r\n    detalles: ''\r\n  };\r\n\r\n  reparaciones = []\r\n  repaMostrar = []\r\n  constructor(\r\n    private repairService: RepairService,\r\n    private router:Router,\r\n    private readonly dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get name() {\r\n    return this.validatorGroup.get('name');\r\n  }\r\n\r\n  get justNumber() {\r\n    return this.validatorGroup.get('number');\r\n  }\r\n\r\n  get placaCampo() {\r\n    return this.validadorPlaca.get('placaCampo');\r\n  }\r\n  onSubmit() {\r\n    this.repairService.create(this.reparacion)\r\n    // la respuesta que me da el servidor\r\n      .subscribe(\r\n        res =>{\r\n          // guarde token en el local storage\r\n          this.reparacion.detalles = '';\r\n          this.reparacion.placa = '';\r\n          this.reparacion.precio = '';\r\n          this.text = res.message; \r\n          this.openDialog(0)\r\n        },\r\n        err => this.openDialog(1) //err\r\n    )\r\n  }\r\n\r\n  buscarReparaciones(){\r\n    this.repairService.getReparaciones(this.placaEditar)\r\n    // la respuesta que me da el servidor\r\n      .subscribe(\r\n        res =>{\r\n          this.repaMostrar = []\r\n          this.reparaciones = []\r\n          // guarde token en el local storage\r\n          this.reparaciones = res.rreparations;\r\n          this.repaMostrar.push(this.reparaciones[0])\r\n        },\r\n        err => {\r\n          this.text = err.error.message; \r\n          this.repaMostrar = []\r\n          this.reparaciones = []\r\n          this.openDialog(1) }//err\r\n    )\r\n  }\r\n\r\n  actualizarReparacion(id,estado,precio,detalles){\r\n    this.datos.detalles = detalles;\r\n    this.datos.estado = estado;\r\n    this.datos.precio = precio;\r\n\r\n    this.repairService.editarReparacion(id,this.datos)\r\n    // la respuesta que me da el servidor\r\n      .subscribe(\r\n        res =>{\r\n          // guarde token en el local storage\r\n             this.buscarReparaciones()\r\n             this.text = res.message; \r\n             this.openDialog(0)\r\n        },\r\n        err => {\r\n          this.text = err.error.message; \r\n          this.openDialog(1) }//err\r\n    )\r\n    \r\n  }\r\n  onPageChange($event) {\r\n    this.repaMostrar =  this.reparaciones.slice($event.pageIndex*$event.pageSize, $event.pageIndex*$event.pageSize + $event.pageSize);\r\n  }\r\n\r\n  openDialog(error) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.minWidth = '350px';\r\n    dialogConfig.maxWidth = '600px';\r\n\r\n    dialogConfig.data = {\r\n      title: error== 1?\":(\":\":)\",\r\n      msg: this.text,\r\n    };\r\n\r\n    this.dialog.open(InfoDialogComponent, dialogConfig).afterClosed().subscribe((success) => {\r\n  },\r\n  (e) => {\r\n      console.error(e);\r\n  });\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-4 mx-auto\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Agregar Reparación\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form (submit)=\"onSubmit()\" [formGroup]=\"validatorGroup\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Placa:</label>\r\n                        <input\r\n                            [class.is-invalid]=\"validatorGroup.get('name').invalid && validatorGroup.get('name').touched\"\r\n                            type=\"text\" [(ngModel)]=\"reparacion.placa\" name=\"placa\" class=\"form-control\"\r\n                            placeholder=\"Placa\" formControlName=\"name\" autofocus>\r\n                        <div *ngIf=\"(name.invalid && name.touched) || name.dirty\">\r\n                            <small *ngIf=\"name.errors?.required\" class=\"text-danger\">La placa es requerida</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cc\">Precio:</label>\r\n                        <input\r\n                            [class.is-invalid]=\"validatorGroup.get('number').invalid && validatorGroup.get('number').touched\"\r\n                            type=\"text\" [(ngModel)]=\"reparacion.precio\" name=\"precio\" class=\"form-control\"\r\n                            placeholder=\"Precio\" formControlName=\"number\">\r\n                        <div *ngIf=\"(justNumber.invalid && justNumber.touched) || justNumber.dirty\">\r\n                            <small *ngIf=\"justNumber.errors?.required\" class=\"text-danger\">El precio es\r\n                                requerido</small>\r\n                            <!--question mark(?) is a safe navigation operator-->\r\n                            <small *ngIf=\"justNumber.errors?.pattern\" class=\"text-danger\">Por favor, ingresa un precio\r\n                                correcto</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cc\">Detalles:</label>\r\n                        <input type=\"text\" [(ngModel)]=\"reparacion.detalles\" name=\"detalles\" class=\"form-control\"\r\n                            placeholder=\"Detalles\" formControlName=\"number\">\r\n                    </div>\r\n\r\n\r\n                    <button type=\"submit\" [disabled]=\"validatorGroup.invalid\" class=\"btn btn-primary btn-block\">\r\n                        Agregar\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-4 mx-auto\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Editar Reparación\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form (submit)=\"buscarReparaciones()\" [formGroup]=\"validadorPlaca\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Placa:</label>\r\n                        <input\r\n                            [class.is-invalid]=\"validadorPlaca.get('placaCampo').invalid && validadorPlaca.get('placaCampo').touched\"\r\n                            type=\"text\" [(ngModel)]=\"placaEditar\" name=\"placa\" class=\"form-control\" placeholder=\"Placa\"\r\n                            formControlName=\"placaCampo\" autofocus>\r\n                        <div *ngIf=\"(placaCampo.invalid && placaCampo.touched) || placaCampo.dirty\">\r\n                            <small *ngIf=\"placaCampo.errors?.required\" class=\"text-danger\">La placa es requerida</small>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\" [disabled]=\"validadorPlaca.invalid\" class=\"btn btn-primary btn-block\">\r\n                        Buscar reparaciones\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n        <ng-template [ngIf]=\"reparaciones.length > 0\">\r\n            <div class=\"card\">\r\n                <mat-paginator (page)=\"onPageChange($event)\" [length]=\"reparaciones.length\" [pageSize]=\"1\"\r\n                    [pageSizeOptions]=\"[1]\">\r\n                </mat-paginator>\r\n                <div class=\"card-body\" *ngFor=\"let reparacion of repaMostrar\">\r\n                    <b>Estado: </b>\r\n                    <select name=\"type\" class=\"form-control\" #estado>\r\n                        <option>{{reparacion.estado}}</option>\r\n                        <option>{{reparacion.estado == \"Finalizado\"? \"En curso\": \"Finalizado\"}}</option>\r\n                    </select>\r\n                    <p></p><b>Precio: </b> <input class=\"form-control\" #precio name=\"precio\"\r\n                        value=\"{{reparacion.precio}}\">\r\n                    <p></p>\r\n                    <b>Detalles: </b> <input class=\"form-control\" #detalles name=\"detalles\"\r\n                        value=\"{{reparacion.detalles}}\">\r\n                    <p></p>\r\n                    <button type=\"submit\" color=\"elegant\" class=\"btn btn-primary\" style=\"background-color:#008cba\"\r\n                        (click)=\"actualizarReparacion(reparacion._id,estado.value,precio.value,detalles.value)\">\r\n                        Actualizar Reparación\r\n                    </button>\r\n                </div>\r\n                <ngb-pagination [collectionSize]=\"totalItems\" [(page)]=\"page\" [(pageSize)]=\"pagesize\" [rotate]=\"true\">\r\n                </ngb-pagination>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n// importar el servicio\r\nimport { AuthService } from  '../../services/auth.service';\r\n// para navegar\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  user = {\r\n    email:'',\r\n    password:''\r\n  };\r\n  error=false;\r\n  constructor(private authService: AuthService,\r\n               private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  signIn(){\r\n    this.authService.signIn(this.user)\r\n      .subscribe(\r\n        res =>{\r\n          //console.log(res);\r\n          if(res.message==\"accedido\"){\r\n          this.error=false;\r\n          localStorage.setItem('mirol', res.role);\r\n          localStorage.setItem('token', res.token);\r\n          localStorage.setItem('myId',res.id);\r\n          \r\n          this.router.navigate(['/private']);\r\n\r\n        }\r\n          else{\r\n            this.error=true;\r\n          }\r\n\r\n        },\r\n        err =>this.error=true\r\n      )\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-4 mx-auto\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Iniciar sesión\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form (submit)=\"signIn()\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">Correo:</label>\r\n                        <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\" placeholder=\"Ingrese el correo\" required autofocus>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">Contraseña:</label>\r\n                        <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" class=\"form-control\" placeholder=\"Ingrese la contraseña\" required>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary btn-block\">\r\n                      Iniciar sesión\r\n                  </button>\r\n                    <label *ngIf=\"error\" style=\"color:red; text-align: center;\"> Verifique usuario y contraseña</label>\r\n\r\n                    <a class=\"center\" [routerLink]=\"['/change-password']\">\r\n                        Olvidé mi contraseña\r\n                    </a>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  text = \"El empleado ya existe. Revisa por favor la cédula o el correo electrónico asociado a él\";\r\n\r\n  validatorGroup = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\r\n    ]),\r\n    number: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(/^[0-9]{1,11}$/),\r\n    ]),\r\n    name: new FormControl('', [\r\n      Validators.required\r\n    ]),\r\n    password: new FormControl('',[\r\n      Validators.required,\r\n      Validators.minLength(5)\r\n    ]),\r\n    role: new FormControl('',[\r\n      Validators.required\r\n    ]),\r\n    phone: new FormControl('',[\r\n      Validators.required,\r\n      Validators.pattern(/^-?(0|[1-9]\\d*)?$/)\r\n    ])\r\n  });\r\n\r\n  user = {\r\n    id_user: '',\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    phone: '',\r\n    role: ''\r\n\r\n  };\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router:Router,\r\n    private readonly dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get primEmail() {\r\n    return this.validatorGroup.get('email');\r\n  }\r\n\r\n  get justNumber() {\r\n    return this.validatorGroup.get('number');\r\n  }\r\n\r\n  get placa() {\r\n    return this.validatorGroup.get('placa');\r\n  }\r\n\r\n  get name() {\r\n    return this.validatorGroup.get('name');\r\n  }\r\n\r\n  get password(){\r\n    return this.validatorGroup.get('password');\r\n  }\r\n\r\n  get role(){\r\n    return this.validatorGroup.get('role');\r\n  }\r\n\r\n  get phone(){\r\n    return this.validatorGroup.get('phone')\r\n  }\r\n\r\n  onSubmit() {\r\n    this.authService.signUp(this.user)\r\n    // la respuesta que me da el servidor\r\n      .subscribe(\r\n        res =>{\r\n          // guarde token en el local storage\r\n          localStorage.setItem('token', res.token);\r\n          this.router.navigate(['/private']);\r\n        },\r\n        err => this.openDialog() //err\r\n    )\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.minWidth = '350px';\r\n    dialogConfig.maxWidth = '600px';\r\n\r\n    dialogConfig.data = {\r\n      title: \":(\",\r\n      msg: this.text,\r\n    };\r\n\r\n    this.dialog.open(InfoDialogComponent, dialogConfig).afterClosed().subscribe((success) => {\r\n  },\r\n  (e) => {\r\n      console.error(e);\r\n  });\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-4 mx-auto\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Registrar empleado\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form (submit)=\"onSubmit()\" [formGroup]=\"validatorGroup\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Nombre:</label>\r\n                        <input [class.is-invalid]=\"validatorGroup.get('name').invalid && validatorGroup.get('name').touched\" type=\"text\" [(ngModel)]=\"user.name\" name=\"name\" class=\"form-control\" placeholder=\"Nombre\" formControlName=\"name\" autofocus>\r\n                        <div *ngIf=\"(name.invalid && name.touched) || name.dirty\">\r\n                            <small *ngIf=\"name.errors?.required\" class=\"text-danger\">El nombre es requerido</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cc\">CC:</label>\r\n                        <input [class.is-invalid]=\"validatorGroup.get('number').invalid && validatorGroup.get('number').touched\" type=\"text\" [(ngModel)]=\"user.id_user\" name=\"id_user\" class=\"form-control\" placeholder=\"Cédula\" formControlName=\"number\">\r\n                        <div *ngIf=\"(justNumber.invalid && justNumber.touched) || justNumber.dirty\">\r\n                            <small *ngIf=\"justNumber.errors?.required\" class=\"text-danger\">La cédula es requerida</small>\r\n                            <!--question mark(?) is a safe navigation operator-->\r\n                            <small *ngIf=\"justNumber.errors?.pattern\" class=\"text-danger\">Por favor, ingresa una cédula correcta</small>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">Correo:</label>\r\n                        <input [class.is-invalid]=\"validatorGroup.get('email').invalid && validatorGroup.get('email').touched\" type=\"text\" [(ngModel)]=\"user.email\" name=\"email\" class=\"form-control\" placeholder=\"Correo\" formControlName=\"email\">\r\n                        <div *ngIf=\"(primEmail.invalid && primEmail.touched) || primEmail.dirty\">\r\n                            <small *ngIf=\"primEmail.errors?.required\" class=\"text-danger\">El Correo es requerido</small>\r\n                            <!--question mark(?) is a safe navigation operator-->\r\n                            <small *ngIf=\"primEmail.errors?.pattern\" class=\"text-danger\">Por favor ingresa un correo correcto</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"phone\">Telefono:</label>\r\n                        <input [class.is-invalid] = \"validatorGroup.get('phone').invalid && validatorGroup.get('phone').touched\" type=\"text\" [(ngModel)]=\"user.phone\"  class=\"form-control\" placeholder=\"Telefono\" formControlName=\"phone\">\r\n                        <div *ngIf=\"(phone.invalid && phone.touched) || phone.dirty\">\r\n                            <small *ngIf=\"phone.errors?.required\" class=\"text-danger\">El telefono es requerido</small>\r\n                            <!--question mark(?) is a safe navigation operator-->\r\n                            <small *ngIf=\"phone.errors?.pattern\" class=\"text-danger\">Por favor, ingresa un telefono correcto</small>\r\n                          </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">Contraseña:</label>\r\n                        <input [class.is-invalid]=\"validatorGroup.get('password').invalid && validatorGroup.get('password').touched\" type=\"password\" [(ngModel)]=\"user.password\" name=\"password\" class=\"form-control\" placeholder=\"Contraseña\" formControlName=\"password\">\r\n                        <div *ngIf=\"(password.invalid && password.touched) || password.dirty\">\r\n                            <small *ngIf=\"password.errors?.required\" class=\"text-danger\">La contraseña es requerida</small>\r\n                            <small *ngIf=\"password.errors?.minlength\" class=\"text-danger\">La contraseña debe tener más de 5 caracteres</small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlSelect1\">Role</label>\r\n                        <select [class.is-invalid]=\"validatorGroup.get('role').invalid && validatorGroup.get('role').touched\" [(ngModel)]=\"user.role\" name=\"role\" class=\"form-control\" id=\"role\" formControlName=\"role\">\r\n                            <div *ngIf=\"(role.invalid && role.touched) || role.dirty\">\r\n                                <small *ngIf=\"role.errors?.required\" class=\"text-danger\">Debes asignarle un rol al empleado</small>\r\n                              </div>\r\n                        <option>admin</option>\r\n                        <option>Gerente general</option>\r\n                        <option>Asistente de gerencia</option>\r\n                        <option>Gerente financiero</option>\r\n                        <option>Asistente financiero</option>\r\n                        <option>Asistente recursos humanos</option>\r\n                        <option>Supervisor de taller</option>\r\n                        <option>Tecnico de taller</option>\r\n                      </select>\r\n                    </div>\r\n                    <button type=\"submit\" [disabled]=\"validatorGroup.invalid\" class=\"btn btn-primary btn-block\">\r\n                        SignUp\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { TasksService } from '../../services/tasks.service';\r\n\r\n@Component({\r\n  selector: 'app-tasks',\r\n  templateUrl: './tasks.component.html',\r\n  styleUrls: ['./tasks.component.css']\r\n})\r\nexport class TasksComponent implements OnInit {\r\n  teams =[];\r\n\r\n  constructor( private tasksService: TasksService) { }\r\n // cuando inicie pide todas la tares\r\n  ngOnInit(): void {\r\n    this.tasksService.getTeam()\r\n    .subscribe(\r\n      res=>{\r\n        console.log(res)\r\n        this.teams=res;\r\n      },\r\n      err=>console.log(err)\r\n    )\r\n  }\r\n\r\n}\r\n","<ul class=\"list-group\">\r\n    <li class=\"list-group-item\" *ngFor=\"let team of teams\">\r\n        {{team._id}} - {{team.name}}: {{team.description}}\r\n    </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-upload-file',\r\n  templateUrl: './upload-file.component.html',\r\n  styleUrls: ['./upload-file.component.css']\r\n})\r\nexport class UploadFileComponent implements OnInit {\r\n  private image:ImageSelected =  null;\r\n  userID=localStorage.getItem('myId');\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onUploadFinish(event) {\r\n    console.log(event);\r\n    this.image = new ImageSelected;\r\n    this.image.image = event.src;\r\n    this.image.name = event.file.name;\r\n  }\r\n\r\n  sendImage(){\r\n    if(this.image != null){\r\n      console.log('send image');\r\n      console.log(this.image.image.split(',')[1]);\r\n      this.http.post('http://localhost:3000/user/agregarfoto/'+this.userID, {\r\n        imgUrl: this.image.image.split(',')[1],\r\n        name: this.image.name\r\n      }).subscribe((d) => {\r\n        console.log(d);\r\n        window.location.reload();\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass ImageSelected {\r\n  public name: String;\r\n  public image: String;\r\n}\r\n","\r\n<mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <div mat-card-avatar class=\"example-header-image\"></div>\r\n     \r\n      <mat-card-subtitle>Selecciona tu nueva imagen</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <image-upload (uploadFinished)=\"onUploadFinish($event)\" [style.background]=\"'black'\">\r\n        </image-upload><button (click)=\"sendImage()\" mat-stroked-button color=\"primary\">Actualizar Imagen</button>\r\n    </mat-card-content>\r\n    </mat-card>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { VehicleService } from '../../services/vehicle.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-vehicle',\r\n  templateUrl: './vehicle.component.html',\r\n  styleUrls: ['./vehicle.component.css'],\r\n})\r\nexport class VehicleComponent implements OnInit {\r\n  error = false;\r\n  msgTitle = '';\r\n  msg = '';\r\n\r\n  vehicle = {\r\n    placa: '',\r\n    date_in: '',\r\n    status: '',\r\n    id_owner: '',\r\n    marca: '',\r\n    model: '',\r\n    color: '',\r\n  };\r\n\r\n  constructor(\r\n    private vehicleService: VehicleService,\r\n    private router: Router,\r\n    private readonly dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  signIn() {\r\n    this.vehicleService.search(this.vehicle.placa).subscribe(\r\n      (res) => {\r\n        this.error = false;\r\n        console.log(res.cars[0].date_in);\r\n        this.vehicle.placa = res.cars[0].placa;\r\n        this.vehicle.date_in = res.cars[0].date_in;\r\n        this.vehicle.status = res.cars[0].status;\r\n        this.vehicle.id_owner = res.cars[0].id_owner;\r\n        this.vehicle.marca = res.cars[0].marca;\r\n        this.vehicle.model = res.cars[0].model;\r\n        this.vehicle.color = res.cars[0].color;\r\n        this.openDialog();\r\n        //console.log(res);\r\n        /* if(res.message==\"accedido\"){\r\n          this.error=false;\r\n          localStorage.setItem('mirol', res.role);\r\n          localStorage.setItem('token', res.token);\r\n          localStorage.setItem('myId',res.id);\r\n          \r\n          this.router.navigate(['/private']);\r\n\r\n        }\r\n          else{\r\n            this.error=true;\r\n          } */\r\n      },\r\n      (err) => {\r\n        this.error = true;\r\n        this.openDialog();\r\n      }\r\n    );\r\n  }\r\n\r\n  openDialog() {\r\n    console.log(this.error);\r\n    if (this.error == false) {\r\n      this.msgTitle = 'Correcto';\r\n      this.msg = `Placa: ${this.vehicle.placa}<br>\r\n                  Color: ${this.vehicle.color}<br>\r\n                  Fecha: ${this.vehicle.date_in}<br>\r\n                  Estado: ${this.vehicle.status}<br>\r\n                  Propietario: ${this.vehicle.id_owner}<br>\r\n                  Marca: ${this.vehicle.marca}<br>\r\n                  Modelo: ${this.vehicle.model}<br>\r\n                 `\r\n    } else {\r\n      this.msgTitle = 'El carro no se encuentra registrado';\r\n      this.msg = ':/'\r\n    }\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.minWidth = '350px';\r\n    dialogConfig.maxWidth = '600px';\r\n\r\n    dialogConfig.data = {\r\n      title: this.msgTitle,\r\n      msg: this.msg\r\n    };\r\n\r\n    this.dialog\r\n      .open(InfoDialogComponent, dialogConfig)\r\n      .afterClosed()\r\n      .subscribe(\r\n        (success) => {},\r\n        (e) => {\r\n          console.error(e);\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-4 mx-auto\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header\">\r\n                Consultar vehiculo por placa\r\n            </div>\r\n            <div class=\"card-body\">\r\n                <form (submit)=\"signIn()\">\r\n                    <!-- <div class=\"form-group\">\r\n                        <label for=\"email\">Email:</label>\r\n                        <input type=\"text\" [(ngModel)]=\"owner.email\" name=\"email\" class=\"form-control\" placeholder=\"Ingresa el correo\" required autofocus>\r\n                    </div> -->\r\n                    <div class=\"form-group\">\r\n                        <label for=\"token\">Placa:</label>\r\n                        <input type=\"text\" [(ngModel)]=\"vehicle.placa\" name=\"placa\" class=\"form-control\" placeholder=\"Ingresa la placa\" required>\r\n                    </div>\r\n                    <button  type=\"submit\" class=\"btn btn-primary btn-block\">\r\n                      Consultar\r\n                  </button>\r\n                  \r\n                    <label *ngIf=\"error\" style=\"color:red; text-align: center;\"> Ingrese un token</label>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(private router: Router) { }\r\n\r\n  public canActivate() {\r\n    let rol = localStorage.getItem('mirol');\r\n    /* console.log(rol); */\r\n    if (rol != \"admin\") {\r\n      this.router.navigate(['/']); //Lo enviamos a la página que queramos\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n// tener metodo para comprobar si esta logeado\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor( private authService: AuthService,\r\n              private router : Router){}\r\n  canActivate(): boolean{\r\n    if(this.authService.loggedIn()){\r\n      return true;\r\n    }\r\n    this.router.navigate(['/signin']);\r\n    return false;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmpleadoGuard implements CanActivate {\r\n  constructor(private router: Router) { }\r\n\r\n  public canActivate() {\r\n    let rol = localStorage.getItem('mirol');\r\n    if (rol == undefined) {\r\n      this.router.navigate(['/']); //Lo enviamos a la página que queramos\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupervisorGuard implements CanActivate {\r\n  constructor(private router: Router) { }\r\n\r\n  public canActivate() {\r\n    let rol = localStorage.getItem('mirol');\r\n    if (rol != \"Supervisor de taller\") {\r\n      this.router.navigate(['/']); //Lo enviamos a la página que queramos\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private URL = environment.apiUrl;//'http://localhost:3000'; // donde esta el back\r\n  constructor(private http: HttpClient,\r\n              private router:Router) { }\r\n\r\n  signUp(user){\r\n    return this.http.post<any>(this.URL + '/user', user); // devuelve un observable\r\n  }\r\n  signIn(user){\r\n    return this.http.post<any>(this.URL + '/auth/login', user);\r\n  }\r\n  /* update(user, userID){\r\n    return this.http.put<any>(this.URL + '/user/id_user/'+ userID, user);\r\n  } */\r\n  loggedIn() {\r\n    if(localStorage.getItem('token')||localStorage.getItem('id_owner') ){\r\n      return true;}\r\n    }\r\n  getToken(){\r\n    return localStorage.getItem('token');\r\n  }\r\n  logout(){\r\n    localStorage.removeItem('id_owner');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('mirol');\r\n    localStorage.removeItem('myId');\r\n    localStorage.clear();\r\n    this.router.navigate(['./signin'])\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmpleadoService {\r\n\r\n  private URL = environment.apiUrl; //'http://localhost:3000'; // donde esta el back\r\n  constructor(private http: HttpClient,\r\n              private router:Router) { }\r\n\r\n  getEmpleado(userId){\r\n    return this.http.get<any>(this.URL + '/user/id_user/'+userId); // devuelve un observable\r\n  }\r\n\r\n  getEmpleado2(email){\r\n    return this.http.get<any>(this.URL + '/user/email/'+email); // devuelve un observable\r\n  }\r\n  update(user, userID){\r\n    return this.http.put<any>(this.URL + '/user/id_user/'+ userID, user);\r\n  }\r\n\r\n  correoRecuperarContraseña(email) {\r\n    return this.http.post<any>(this.URL + '/user/password/recuperar', email);\r\n  }\r\n\r\n  cambiarContraseña(datos,id) {\r\n    return this.http.put<any>(this.URL + '/user/password/id_user/'+id, datos);\r\n  }\r\n  getAll(){\r\n    return this.http.get<any>(this.URL + '/user/showWorkers/'); // devuelve un observable\r\n  }\r\n\r\n  desactivar(id){\r\n    let datos = {}\r\n    return this.http.put<any>(this.URL + '/user/desactivar/id_user/'+id,datos); // devuelve un observable\r\n  }\r\n  activar(id){\r\n    let datos = {}\r\n    return this.http.put<any>(this.URL + '/user/activar/id_user/'+id,datos); // devuelve un observable\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OwnerService {\r\n  private URL = environment.apiUrl; //'http://localhost:3000'; // donde esta el back\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  signUp(owner) {\r\n    return this.http.post<any>(this.URL + '/owner/', owner); // devuelve un observable\r\n  }\r\n  signIn(owner){\r\n    return this.http.post<any>(this.URL + '/auth/logintoken', owner);\r\n  }\r\n  refreshToken(email){\r\n    return this.http.post<any>(this.URL + '/owner/refreshToken', email);\r\n  }\r\n  loggedIn() {\r\n    //if(localStorage.getItem('token')){\r\n      //return true;\r\n      return !!localStorage.getItem('token');\r\n    }\r\n  getToken(){\r\n    return localStorage.getItem('token');\r\n  }\r\n  logout(){\r\n    localStorage.removeItem('token');\r\n    this.router.navigate(['./signin'])\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RepairService {\r\n  private URL = environment.apiUrl;//'http://localhost:3000'; // donde esta el back\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  create(reparation) {\r\n    return this.http.post<any>(this.URL + '/reparation/create', reparation); // devuelve un observable\r\n  }\r\n\r\n  getReparaciones(placa) {\r\n    return this.http.get<any>(this.URL + '/reparation/onplaca/'+placa); // devuelve un observable\r\n  }\r\n\r\n  editarReparacion(id,datos) {\r\n    return this.http.put<any>(this.URL + '/reparation/_id/'+id, datos); // devuelve un observable\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment'; // Importa la configuración\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TasksService {\r\n\r\n  private URL = `${environment.apiUrl}/user`; //'http://localhost:3000/user';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTeam(){\r\n    return  this.http.get<any>(this.URL + '/team');\r\n  }\r\n\r\n  getPrivateTasks(){\r\n    return  this.http.get<any>(this.URL + '/private-tasks');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthService} from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// añade globalmente el formato de token\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n  constructor(private authService: AuthService) { }\r\n\r\n  // req toma la info de cada peticion y añade mas (cabecera)\r\n  intercept(req,next){\r\n    const tokeninzeReq = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${this.authService.getToken()}`\r\n      }\r\n    })\r\n    return next.handle(tokeninzeReq);\r\n   }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment'; // Importa la configuración\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VehicleService {\r\n  //'https://tallerjdpautos.herokuapp.com'\r\n  private URL = environment.apiUrl; //'http://localhost:3000'; // donde esta el back\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  search(placa){\r\n    return this.http.get<any>(this.URL + '/car/placa/' + placa); // devuelve un observable\r\n  }\r\n\r\n  crearVehiculo(datos){\r\n    return this.http.post<any>(this.URL + '/car/create' , datos); // devuelve un observable\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://jdpstaller.azurewebsites.net'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}